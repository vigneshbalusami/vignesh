#include <bits/stdc++.h>
#define lli long long int
using namespace std;
vector<lli> strength1,left1,right1;
lli m1=0;
void fun(lli i,lli j,lli c){
    if(c+strength1[i]>m1)m1=c+strength1[i];
    if(i>=0){
    for(int l = i,j = left1[i]-1;l>=0;){
        if(j+right1[j]<l){
            cout<<j<<"! "<<j-left1[j]-1<<endl;
            fun(j,j-left1[j]-1,c+strength1[l]);
        }else if(j>=0)j--;
        
    }
    }
}

int main() {
    lli n,i,j,count=0,m=0,l;
     cin>>n;
    strength1.resize(n);
    left1.resize(n);
    right1.resize(n);
    for(i=0;i<n;i++)
        cin>>strength1[i];
    for(i=0;i<n;i++)
        cin>>left1[i];
    for(i=0;i<n;i++)
        cin>>right1[i];
    fun(n-1,(left1[n-1])-1,0);
    cout<<m1<<endl;
    return 0;
}
#include <bits/stdc++.h>
#define lli long long int
using namespace std;


int main() {
    lli n,i,j,count=0,m=0,l;
     cin>>n;
    vector<lli> strength,left,right;
    strength.resize(n);
    left.resize(n);
    right.resize(n);
    for(i=0;i<n;i++)
        cin>>strength[i];
    for(i=0;i<n;i++)
        cin>>left[i];
    for(i=0;i<n;i++)
        cin>>right[i];
    for(i=n-1;i>=0;i--){
        count = 0;
        for(j=i,l=j-left[j]-1;j>=0 && l >=0;){
           
            if(right[l] < abs(j-l)){
                count += strength[j]+strength[l];
                j=l; 
                l=j-left[j]-1;
            }
            else l--;
        }
        if(m<count)
            m=count;
    }
    cout<<m<<endl;
    return 0;
}
